version: '3'
services:
# This makes the dockerised containers publicly accessible so that
# runtime fetch requests made by the webserver (in browser) reach
# the containers sequestered in the docker network through forwarding
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - webserver
      - api_proxy_server
      - cms_server
# SERVERS
  api_proxy_server:
    build: ./api_proxy_server
    ports:
      - "3001:3001"
    environment:
      - ANTHROPIC_API_KEY=<API KEY> # ENTER AN API KEY HERE OR AI FUNCTIONALITY WON'T WORK
      - CMS_ROUTE=http://cms_server:3002
      - PORT=3001
  cms_server:
    build: ./cms_server
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DATA_DIR=/app/data
    volumes:
      - ./cms_data:/app/data
  webserver:
    build:
      context: ./webserver
      args:
        LOCAL_ACCESS_CMS: http://cms_server:3002
        USER_ACCESS_CMS: http://localhost:80/cms
        LOCAL_ACCESS_AI: http://api_proxy_server:3001
        USER_ACCESS_AI: http://localhost:80/api
        REVALIDATE_TIME_SECS: 15
        VERSION: 1.6
    ports:
      - "3000:3000"
    environment:
      - REVALIDATE_TIME_SECS=15
      - LOCAL_ACCESS_CMS=http://cms_server:3002
      - USER_ACCESS_CMS=http://localhost:80/cms
      - LOCAL_ACCESS_AI=http://api_proxy_server:3001
      - USER_ACCESS_AI=http://localhost:80/api
      - VERSION=1.6